---
- hosts: node

  vars:
    certGenDir: "{{ lookup('env','CERTS_GEN_DIR') }}"
    kubeconfigDir: "{{ lookup('env','KUBECONFIG_DIR') }}"

  tasks:
    - stat: path=/usr/local/bin/kubelet
      register: kubelet_exists

    - name: "Install Kubernetes Controller Binaries"
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/{{ item }}
        dest: /usr/local/bin/
        mode: "+x"
      become: true
      with_items:
        - "kubectl"
        - "kube-proxy"
        - "kubelet"
      when: kubelet_exists.stat.exists == false

    - name: Create directories
      file: path={{ item }} state=directory
      with_items:
        - "/var/lib/kube-proxy"
      become: true

# TODO: REMOVE IF NOT NEEDED IN FLANNEL
##    - name: "Generate 10-bridge.conf file"
##      template:
##        src: templates/10-bridge.conf.j2
##        dest: /etc/cni/net.d/10-bridge.conf
##      become: true
##
#    - name: "Generate 99-loopback.conf file"
#      template:
#        src: templates/99-loopback.conf.j2
#        dest: /etc/cni/net.d/99-loopback.conf
#      become: true

    - name: "Copy certificates to nodes"
      copy: src={{ item }} dest="/var/lib/kubelet/"
      with_items:
        - "{{ certGenDir }}/{{ inventory_hostname }}.pem"
        - "{{ certGenDir }}/{{ inventory_hostname }}-key.pem"
      become: true

    - name: "Copy kubeconfig to nodes"
      copy: src="{{ kubeconfigDir }}/{{ inventory_hostname }}.kubeconfig" dest="/var/lib/kubelet/kubeconfig"
      become: true

    - name: "Copy ca to nodes"
      copy: src="{{ certGenDir }}/ca.pem" dest="/var/lib/kubernetes/"
      become: true

    - name: "Copy kube-proxy.kubeconfig to nodes"
      copy: src="{{ kubeconfigDir }}/kube-proxy.kubeconfig" dest="/var/lib/kube-proxy/kubeconfig"
      become: true

    - name: "Generate kubelet.service file"
      template:
        src: templates/kubelet.service.j2
        dest: /etc/systemd/system/kubelet.service
      become: true

    - name: "Generate kube-proxy.service file"
      template:
        src: templates/kube-proxy.service.j2
        dest: /etc/systemd/system/kube-proxy.service
      become: true

    - name: "Start systemd services"
      systemd:
        state: restarted
        daemon_reload: yes
        enabled: yes
        name: "{{ item }}"
      with_items:
        - "kubelet"
        - "kube-proxy"
      become: true